// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  image         String?
  emailVerified DateTime?
  // Fields for linking quizzes, stats, etc. (One-to-Many relationships)
}

model Quiz {
  id        String   @id @default(cuid())
  title     String
  createdAt DateTime @default(now())
  // Relationship to questions and possibly user who created the quiz
  questions Question[]
  // Maybe a field for topic/subject to categorize quizzes
  subject   String
}

model Question {
  id            String  @id @default(cuid())
  quizId        String
  quiz          Quiz    @relation(fields: [quizId], references: [id])
  text          String
  answers       String[] // Could be multiple-choice answers stored as an array
  correctAnswer String
  // For open-ended questions, you might store hints, solution outlines, etc.
}

model Game {
  id       String @id @default(cuid())
  userId   String
  user     User   @relation(fields: [userId], references: [id])
  quizId   String
  quiz     Quiz    @relation(fields: [quizId], references: [id])
  startTime DateTime @default(now())
  // Possibly a field to track user performance, time taken, score, etc.
  results   Json // Could store a JSON object of questionId -> userAnswer pairs
}
